/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Kotlin library project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.9/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the org.jetbrains.kotlin.jvm Plugin to add support for Kotlin.
    alias(libs.plugins.jvm)

    // Apply the java-library plugin for API and implementation separation.
    `java-library`

    `maven-publish`
}

group = "at.neon"
// artifactId // default artifactId is the same as the project name
version = "0.0.1-dev"

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation(libs.junit.jupiter)

    testRuntimeOnly("org.junit.platform:junit-platform-launcher")
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

// publishing to mavelLocal results in following hierarchy:
// ~/.m2/repository/at/differentneon/neon-lib/0.0.1-mavenrelease/neon-lib-0.0.1-mavenrelease.jar
publishing {
    publications {
        create<MavenPublication>("neon-library") {
            from(components["java"])
            // the following settings overwrite the ones in the root build.gradle.kts
            groupId = "at.differentneon"
            artifactId = "neon-lib"
            version = "0.0.1-mavenrelease"
            /*
            groupId = 'org.company'
            artifactId = 'sample'
            version = '0.9-SNAPSHOT'
            from components.java
            pom {
                name = 'My Library'
                description = 'A description of my library'
            }
             */
        }
    }

    repositories {
        maven {
            name = "demo-repository"
            url = uri(layout.buildDirectory.dir("demo-repository"))
        }
    }
}


tasks.named<Test>("test") {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
